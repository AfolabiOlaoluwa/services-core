version: "3"
volumes:
  postgres-data:
    driver: local
  postgres-catarse-data:
    driver: local
  dispatcher-redis-data:
    driver: local
  catarse-redis-data:
    driver: local

services:
  dispatcher_redis:
    image: redis
    volumes:
      - dispatcher-redis-data:/var/lib/redis
    command: redis-server --appendonly yes

  catarse_redis:
    image: redis
    volumes:
      - catarse-redis-data:/var/lib/redis
    command: redis-server --appendonly yes

  catarse_db:
    image: library/postgres:9.4-alpine
    volumes:
      - ./init_catarse.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-catarse-data:/var/lib/postgresql/data
    ports:
      - "5445:5432"
    links:
        - "service_core_db:service_core_db"
    depends_on:
      - service_core_db
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_USER: catarse
      POSTGRES_DB: catarse_db

  service_core_db:
    image: library/postgres:9.6.5-alpine
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5444:5432"
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_USER: postgres
      POSTGRES_DB: service_core

  # service just for apply migrations or seed
  migrations:
    build:
      context: ./
      dockerfile: Dockerfile
    # image: comum/services-core:latest
    env_file:
      - ./compose_env/.service_core_migrator.env
    command: ["./scripts/run_migrations.sh"]
    volumes: 
      - ./migrations:/usr/app/migrations
    links:
        - "service_core_db:service_core_db"

  notification_dispatcher:
    build:
      context: ../notification-service-api
      dockerfile: Dockerfile
    env_file:
      - ./compose_env/.notification_dispatcher.env
    command: ["./dispatchers/notification_dispatcher"]
    volumes:
      - ../notification-service-api/:/usr/app
    links:
      - "service_core_db:service_core_db"
      - "dispatcher_redis:dispatcher_redis"
    depends_on:
      - service_core_db
      - dispatcher_redis

  payment_stream_processor:
    build:
      context: ../payment-service-api
      dockerfile: Dockerfile
    # image: comum/payment-service:latest
    env_file:
      - ./compose_env/.payment_stream_processor.env
    command: ["./dispatchers/payment_stream_processor"]
    volumes:
      - ../payment-service-api/:/usr/app
    links:
      - "service_core_db:service_core_db"
      - "dispatcher_redis:dispatcher_redis"
    depends_on:
      - service_core_db
      - dispatcher_redis

  # payment_processor_dispatcher:
  #   build:
  #     context: ../payment-service-api
  #     dockerfile: Dockerfile
  #   # image: comum/payment-service:latest
  #   env_file:
  #     - ./compose_env/.payment_processor_dispatcher.env
  #   command: ["./dispatchers/payment_processor_dispatcher"]
  #   volumes:
  #     - ../payment-service-api/:/usr/app
  #   links:
  #     - "service_core_db:service_core_db"
  #     - "dispatcher_redis:dispatcher_redis"
  #   depends_on:
  #     - service_core_db
  #     - dispatcher_redis

  # credit_cards_dispatcher:
  #   build:
  #     context: ../payment-service-api
  #     dockerfile: Dockerfile
  #   # image: comum/payment-service:latest
  #   env_file:
  #     - ./compose_env/.credit_cards_dispatcher.env
  #   command: ["./dispatchers/create_cards"]
  #   volumes:
  #     - ../payment-service-api/:/usr/app
  #   links:
  #     - "service_core_db:service_core_db"
  #     - "dispatcher_redis:dispatcher_redis"
  #   depends_on:
  #     - service_core_db
  #     - dispatcher_redis

  subscriptions_scheduler:
    build:
      context: ../payment-service-api
      dockerfile: Dockerfile
    env_file:
      - ./compose_env/.subscriptions_scheduler.env
    command: ["./scripts/subscription_scheduler.js"]
    volumes:
      - ../payment-service-api/:/usr/app
    links:
      - "service_core_db:service_core_db"
    depends_on:
      - service_core_db

  hook_service_api:
    build:
      context: ../hook-service-api
      dockerfile: Dockerfile
    env_file:
      - ./compose_env/.hook_service_api.env
    command: ["npm", "start", "server.js"]
    volumes:
      - ../hook-service-api/:/usr/app
    links:
      - "service_core_db:service_core_db"
    depends_on:
      - service_core_db
    ports:
      - "3006:4444"

  catarse:
    build:
      context: ../catarse
      dockerfile: dev.Dockerfile
    environment:
      RAILS_ENV: development
      DATABASE_URL: postgres://catarse:example@localhostcatarse:5432/catarse_db
      REDIS_URL: redis://catarse_redis:6379
    command: ["bundle", "exec", "rails", "server", "-b", "0.0.0.0"]
    volumes:
      # mount volumes for development on catarse / catarse.js
      - ../catarse/:/usr/app
      - ../catarse.js/:/usr/app/node_modules/catarse.js
    links:
      - "catarse_db:localhostcatarse"
      - "catarse_redis:catarse_redis"
    depends_on:
      - catarse_db
      - catarse_redis
    ports:
      - "3000:3000"

  catarse_api:
    image: postgrest/postgrest:v0.4.3.0
    env_file:
      - ./compose_env/.catarse_api.env
    depends_on:
      - catarse_db
    links:
      - "catarse_db:catarse_db"
    ports:
      - "3008:3000"

  payment_service_api:
    image: postgrest/postgrest:v0.4.4.0
    env_file:
      - ./compose_env/.payment_service_api.env
    depends_on:
      - service_core_db
    links:
      - "service_core_db:service_core_db"
    ports:
      - "3001:3000"

  project_service_api:
    image: postgrest/postgrest:v0.4.4.0
    env_file:
      - ./compose_env/.project_service_api.env
    depends_on:
      - service_core_db
    links:
      - "service_core_db:service_core_db"
    ports:
      - "3002:3000"

  community_service_api:
    image: postgrest/postgrest:v0.4.4.0
    env_file:
      - ./compose_env/.community_service_api.env
    depends_on:
      - service_core_db
    links:
      - "service_core_db:service_core_db"
    ports:
      - "3003:3000"

  platform_service_api:
    image: postgrest/postgrest:v0.4.4.0
    env_file:
      - ./compose_env/.platform_service_api.env
    depends_on:
      - service_core_db
    links:
      - "service_core_db:service_core_db"
    ports:
      - "3004:3000"

  analytics_service_api:
    image: postgrest/postgrest:v0.4.4.0
    env_file:
      - ./compose_env/.analytics_service_api.env
    depends_on:
      - service_core_db
    links:
      - "service_core_db:service_core_db"
    ports:
      - "3005:3000"

  notification_service_api:
    image: postgrest/postgrest:v0.4.4.0
    env_file:
      - ./compose_env/.notification_service_api.env
    depends_on:
      - service_core_db
    links:
      - "service_core_db:service_core_db"
    ports:
      - "3007:3000"
